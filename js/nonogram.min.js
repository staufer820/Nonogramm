let gameover, mistakes, start_time, timer, drawing; function reset() { gameover = !1, mistakes = 0, mistakes_label.innerText = mistakes, mistakes_label.classList.remove("notzero"), win_label.classList.remove("active"), document.querySelector("game").className = "", document.querySelectorAll("game>*").forEach(a => a.remove()); let a = parseInt(size_slider.value), b = Array(a).fill(Array(a).fill(0)).map(a => a.map(() => Math.random() < chance_slider.value / 100)), c = document.createElement("table"), d = document.createElement("tr"); d.append(document.createElement("td")); for (let c, f = 0; f < a; f++)c = document.createElement("td"), c.innerHTML = [...b].reduce((c, a) => [...c, ...a], []).filter((b, c) => c % a === f).reduce((c, a) => a ? c + "1" : c + "0", "").split("0").map(a => a.length).filter(a => 0 != a).join("<br>"), d.append(c); c.append(d); let e = 6 > a ? null : 6 == a ? 3 : [7, 8].includes(a) ? 4 : 5; for (let d, g = 0; g < a; g++) { d = document.createElement("tr"), d.append(document.createElement("td")); for (let c, f = 0; f < a; f++)c = document.createElement("td"), c.setAttribute("y", g), c.setAttribute("x", f), c.setAttribute("complete", !1), c.setAttribute("clicked", !1), c.setAttribute("legit", b[g][f]), c.addEventListener("contextmenu", a => { a.preventDefault() }), c.addEventListener("mouseenter", () => { !1 !== drawing && [0, 1].includes(drawing) && open_field(c, drawing) }), c.addEventListener("mousedown", a => { [0, 2].includes(a.button) && (drawing = 0 == a.button ? 0 : 1, open_field(a.target, drawing)) }), c.className = "field", e && (f % e == e - 1 ? c.classList.add("divider", "r") : 0 == f % e && c.classList.add("divider", "l"), g % e == e - 1 ? c.classList.add("divider", "b") : 0 == g % e && c.classList.add("divider", "t")), d.append(c); c.append(d) } document.querySelector("game").append(c), document.querySelectorAll("tr:not(:first-of-type) td:first-of-type").forEach((a, c) => { a.innerHTML = b[c].reduce((c, a) => a ? c + "1" : c + "0", "").split("0").map(a => a.length).filter(a => 0 != a).join(" ") }), c.style.paddingRight = `${document.querySelector("td").offsetWidth / 2}px`, timer && clearInterval(timer), start_time = new Date().getTime(), timer = setInterval(() => { let a = new Date().getTime() - start_time, b = Math.floor(a / 36e5); b = 1 == b.toString().length ? "0" + b : b, a -= 36e5 * b; let c = Math.floor(a / 6e4); c = 1 == c.toString().length ? "0" + c : c, a -= 6e4 * c; let d = Math.floor(a / 1e3); d = 1 == d.toString().length ? "0" + d : d, a -= 1e3 * d, timer_label.innerText = `${b}:${c}:${d}` }, 100) } function open_field(a, b) { if (!gameover && !a.classList.contains("fail") && "false" == a.getAttribute("clicked") && "false" == a.getAttribute("complete")) if ((0 != b || "true" != a.getAttribute("legit")) && (1 != b || "false" != a.getAttribute("legit"))) mistakes_label.innerText = ++mistakes, mistakes_label.classList.add("notzero"), a.classList.add("fail"), setTimeout(() => a.classList.remove("fail"), 1e3); else if (a.setAttribute("clicked", "true"), 0 == b && a.classList.add("legit"), 0 == document.querySelectorAll(`td.field[legit = 'true'][clicked = 'false']`).length) clearInterval(timer), document.querySelectorAll(`field`).forEach(a => { a.style.animationDelay = "false" == a.getAttribute("complete") && !1 == a.getAttribute("clicked") ? `${Math.random().toFixed(2)}s` : null }), document.querySelector("game").classList.add("gameover"), gameover = !0, win_label.classList.add("active"); else { if (0 == document.querySelectorAll(`td.field[y='${a.getAttribute("y")}'][legit='true'][clicked='false']`).length) { let b = document.querySelectorAll(`td.field[y='${a.getAttribute("y")}']`); b.forEach((a, c) => { a.setAttribute("complete", "false"), a.style.animationDelay = `${c / (b.length - 1)}s`, a.setAttribute("complete", "true") }) } if (0 == document.querySelectorAll(`td.field[x='${a.getAttribute("x")}'][legit='true'][clicked='false']`).length) { let b = document.querySelectorAll(`td.field[x='${a.getAttribute("x")}']`); b.forEach((a, c) => { a.setAttribute("complete", "false"), a.style.animationDelay = `${c / (b.length - 1)}s`, a.setAttribute("complete", "true") }) } } } let timer_label = document.querySelector("#time_label span"), chance_slider = document.querySelector("#chance_slider"); chance_slider.addEventListener("input", () => chance_label.innerText = `Chance: ${chance_slider.value}% `); let size_slider = document.querySelector("#size_slider"); size_slider.addEventListener("input", () => size_label.innerText = `Size: ${size_slider.value}x${size_slider.value} `); let chance_label = document.querySelector("#chance_label"); chance_label.innerText = `Chance: ${chance_slider.value}% `; let size_label = document.querySelector("#size_label"); size_label.innerText = `Size: ${size_slider.value}x${size_slider.value} `; let mistakes_label = document.querySelector("#mistakes_label span"), win_label = document.querySelector("#win_label"); window.onmouseup = () => drawing = null, document.querySelector("#reset_btn").addEventListener("click", reset), reset();